name: Deploy Deno H3 Application

on:
  workflow_dispatch:
    inputs:
      environment:
        description: '部署环境'
        required: true
        default: 'latest'
        type: choice
        options:
          - latest
          - staging
      tag:
        description: '要部署的镜像标签 (latest, sha-xxx, 分支名)'
        required: true
        default: 'latest'
        type: string

env:
  REGISTRY: dr.lucardo.website:4443
  IMAGE_NAME: deno-h3

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: 部署到服务器
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.tag }}
            CONTAINER_NAME=deno-h3-${{ inputs.environment }}
            PORT=${{ inputs.environment == 'latest' && '5020' || '5021' }}
            
            echo "🦕 开始部署 Deno H3 应用"
            echo "环境: ${{ inputs.environment }}"
            echo "使用镜像: $IMAGE"
            
            # 登录到 registry
            podman login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} ${{ env.REGISTRY }}
            
            # 拉取镜像
            echo "📦 拉取镜像: $IMAGE"
            podman pull $IMAGE
            
            # 检查容器是否存在
            if podman ps -a --format '{{.Names}}' | grep -q "^${CONTAINER_NAME}$"; then
              echo "🛑 停止并移除已存在的容器: $CONTAINER_NAME"
              podman stop $CONTAINER_NAME
              podman rm $CONTAINER_NAME
            else
              echo "ℹ️  容器 $CONTAINER_NAME 不存在，跳过停止步骤"
            fi
            
            # 启动新容器
            echo "🚀 启动新的 Deno H3 容器"
            podman run -d \
              --name $CONTAINER_NAME \
              -p $PORT:5010 \
              --restart=always \
              $IMAGE
            
            # 验证容器是否成功运行
            sleep 5
            if ! podman ps | grep -q "$CONTAINER_NAME"; then
              echo "❌ 容器启动失败"
              echo "📋 容器日志:"
              podman logs $CONTAINER_NAME
              exit 1
            fi
            
            # 清理登录凭证
            podman logout ${{ env.REGISTRY }}
            
            echo "✅ Deno H3 应用部署完成"
            echo "🌍 环境: ${{ inputs.environment }}"
            echo "🏷️ 镜像: $IMAGE"
            echo "🚢 容器: $CONTAINER_NAME"
            echo "🔌 端口: $PORT"
            echo "🦕 Deno H3 应用已启动并运行"
            
            # 输出容器状态
            echo ""
            echo "📊 容器状态:"
            podman ps | grep $CONTAINER_NAME