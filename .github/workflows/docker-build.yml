name: Build and Push Deno H3
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # 允许手动触发构建

env:
  REGISTRY: dr.lucardo.website:4443
  IMAGE_NAME: deno-h3

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 登录到Docker仓库
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: 提取元数据
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          # 主分支更新 latest tag
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
          # 提交 SHA
          type=sha,prefix=sha-
          type=sha,prefix=sha-,format=short
          # 分支名称
          type=ref,event=branch
          # PR 编号
          type=ref,event=pr
          # Git tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          
    - name: 构建并推送Docker镜像
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: 输出镜像信息
      run: |
        echo "✅ Deno H3 应用构建完成！"
        echo "🏷️  镜像标签: ${{ steps.meta.outputs.tags }}"
        echo ""
        echo "📦 构建信息:"
        echo "完整提交hash: ${{ github.sha }}"
        echo "短提交hash: $(echo ${{ github.sha }} | cut -c1-7)"
        echo "分支: ${{ github.ref_name }}"
        echo "提交消息: ${{ github.event.head_commit.message }}"
        echo ""
        echo "🦕 Deno 应用特性:"
        echo "- 基于 Deno 运行时"
        echo "- 使用 H3 框架"
        echo "- 支持多架构 (amd64/arm64)"